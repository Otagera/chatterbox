doctype html
html(lang='en')
  head
    title Chatterbox Dashboard - #{appName}
    link(rel='stylesheet', href='https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css')
    script(src='https://unpkg.com/htmx.org@1.5.0')
    style.
      body {padding: 20px}
      table {font-family: arial, sans-serif;border-collapse: collapse;width: 100%; font-size:12px;}
      tr.htmx-swapping td {opacity: 0;transition: opacity 0.5s ease-out;}
      td, th {border: 1px solid #383737;text-align: left;padding: 8px;}
      tr:nth-child(even) {background-color: #dddddd;}
      div#copyIconContainer svg{width: 20px; height: 20px}
  body
    .container.mt-4
        h1 Chatterbox Dashboard
        h2 Application: #{appName}

        .d-flex.justify-content-end.mb-3
          a.btn.btn-primary.me-2(href="/analytics" style="color: white; text-decoration: none;") Analytics
          //-   button(hx-get=`/view/authorize` hx-target="this" hx-swap="outerHTML" class="btn btn-primary" style="margin-right: 5px") New SecKey
          a.btn.btn-secondary.me-2(href="/view/authorize") View SecKey
          button.btn.btn-danger(hx-post=`/view/logout` hx-boost="true") Logout

        hr
        
        form(hx-post="/view/search" hx-swap="innerHTML" hx-target="#new-log" class="mb-3")
          input(type="text" placeholder="Level" name="level" class="form-control mb-3" list="levelDatalistOptions")
          datalist(id="levelDatalistOptions")
            option(value="info")
            option(value="error")
            option(value="warn")
            option(value="trace")
            option(value="fatal")
          input(type="text" placeholder="Key" name="key" class="form-control mb-3")
          div(class="form-group")
            label(for="startDate") Start Date:
            input(type="datetime-local" placeholder="Start Date" name="startDate" id="startDate" class="form-control mb-3")
          div(class="form-group")
            label(for="endDate") Finish Date:
            input(type="datetime-local" placeholder="Finish Date" name="endDate" id="endDate" class="form-control mb-3")
          button(type="submit" class="btn btn-primary") Search Logs
        table( hx-indicator=".htmx-indicator" class="table table-striped table-hover")
          colgroup
            col(span="1" style="width:10%")
            col(span="1" style="width:28%")
            col(span="1" style="width:52%")
            col(span="1" style="width:10%")
          thead
            tr
              th(scope="col") ID
              th(scope="col") Key
              th(scope="col") Data
              th(scope="col") level
          tbody(id="new-log" class="table-group-divider" hx-target="closest tr" hx-swap="outerHTML swap:0.5s")
            each log, index in logs
              tr
                td(scope="row") #{log.id}
                td #{log.key}
                td(hx-get=`/view/get-log-data/${log.id}` hx-target="this" role="button")
                  small(class="text-muted") #{log.createdAt}
                td(class=`${log.levelStyle}`) #{log.level}
            tr(hx-get="/view/get-more-logs" hx-trigger="revealed" hx-swap="outerHTML swap:0.5s" hx-target="this")
              td Loading more...
              td(colspan="3")
        button(class="btn btn-primary" hx-get=`/view/get-more-logs` hx-swap="beforeend" hx-target="#new-log") Fetch More

    script.
      document.addEventListener("click", (event) => {
        const userObject = JSON.parse(`!{JSON.stringify(user)}`);
        // Assuming userObject has a property like 'apiKey' you want to copy
        if (userObject && userObject.apiKey) {
          copyToClipboard(userObject.apiKey);
        } else {
          console.error("User API key not found");
        }
      });

      const copyToClipboard = (text) => { // text should be a string
        navigator.clipboard.writeText(text)
          .then(() => console.log("Text copied to clipboard:", text))
          .catch(err => console.error("Failed to copy text:", err));
      };
  